{"ast":null,"code":"var _jsxFileName = \"/home/ignacio/Plataforma 5/27-checkpoint-OMDB/src/components/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { ListGroupItem, ListGroup } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = ({\n  addToFavourites,\n  removeFromFavourites,\n  handleClick\n}) => {\n  _s();\n\n  const userLoggedInUsername = useSelector(state => {\n    return state.userLoggedIn.username;\n  });\n  const userLoggedInEmail = useSelector(state => {\n    return state.userLoggedIn.email;\n  });\n  const favMovies = useSelector(state => {\n    return state.favouriteMovies;\n  });\n  const searchedUser = useSelector(state => {\n    return state.searchedUser;\n  });\n  const favouriteMoviesSelectedUser = useSelector(state => {\n    return state.favouriteMoviesSelectedUser;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selectedMovie\",\n    children: searchedUser.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"to\",\n        src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n        className: \"imgSelectedMovie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"selectedCard\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"cardBodySelectedMovie\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${searchedUser.username}'s collection`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"ContainerImgFav\",\n            children: favouriteMoviesSelectedUser.map(movie => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: `/movie/${movie.imdbId}`,\n                children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                  className: \"favouriteMoviesInUsers\",\n                  onClick: () => {\n                    handleClick(movie.imdbId);\n                  },\n                  variant: \"top\",\n                  src: movie.link\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: userLoggedInEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"to\",\n        src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n        className: \"imgSelectedMovie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"selectedCard\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"cardBodySelectedMovie\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: `${userLoggedInUsername}'s collection`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"ContainerImgFav\",\n            children: favMovies.map(movie => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: `/movie/${movie.imdbId}`,\n                children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                  className: \"favouriteMoviesInUsers\",\n                  onClick: () => {\n                    handleClick(movie.imdbId);\n                  },\n                  variant: \"top\",\n                  src: movie.link\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"h7\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: userLoggedInEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"7phGoaqCys2QG/XkMqs49VWXCJc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/ignacio/Plataforma 5/27-checkpoint-OMDB/src/components/Users.jsx"],"names":["React","Card","useSelector","ListGroupItem","ListGroup","Link","Users","addToFavourites","removeFromFavourites","handleClick","userLoggedInUsername","state","userLoggedIn","username","userLoggedInEmail","email","favMovies","favouriteMovies","searchedUser","favouriteMoviesSelectedUser","id","map","movie","imdbId","link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { ListGroupItem, ListGroup } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport const Users = ({ addToFavourites, removeFromFavourites, handleClick }) => {\n    const userLoggedInUsername = useSelector((state) => {\n        return state.userLoggedIn.username\n    })\n    const userLoggedInEmail = useSelector((state) => {\n        return state.userLoggedIn.email\n    })\n    const favMovies = useSelector((state) => {\n        return state.favouriteMovies\n    })\n    const searchedUser = useSelector((state) => {\n        return state.searchedUser\n    })\n    const favouriteMoviesSelectedUser = useSelector((state) => {\n        return state.favouriteMoviesSelectedUser\n    })\n\n    return (\n        <div className='selectedMovie'>\n            {searchedUser.id ?\n                <div>\n                    <Card.Img variant=\"to\" src='https://react.semantic-ui.com/images/avatar/large/matthew.png' className='imgSelectedMovie' />\n                    <Card className='selectedCard' >\n                        <Card.Body className='cardBodySelectedMovie'>\n                            <Card.Title><h1>{`${searchedUser.username}'s collection`}</h1></Card.Title>\n                            <Card.Text className='ContainerImgFav'>\n                                {favouriteMoviesSelectedUser.map((movie) => {\n                                    return <Link to={`/movie/${movie.imdbId}`}>\n                                        <Card.Img className='favouriteMoviesInUsers' onClick={() => { handleClick(movie.imdbId) }} variant=\"top\" src={movie.link} />\n                                    </Link>\n                                })}\n                            </Card.Text>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem><h7>Email: </h7><h5>{userLoggedInEmail}</h5></ListGroupItem>\n                        </ListGroup>\n                    </Card>\n                </div>\n                :\n                <div>\n                    <Card.Img variant=\"to\" src='https://react.semantic-ui.com/images/avatar/large/matthew.png' className='imgSelectedMovie' />\n                    <Card className='selectedCard' >\n                        <Card.Body className='cardBodySelectedMovie'>\n                            <Card.Title><h1>{`${userLoggedInUsername}'s collection`}</h1></Card.Title>\n                            <Card.Text className='ContainerImgFav'>\n                                {favMovies.map((movie) => {\n                                    return <Link to={`/movie/${movie.imdbId}`}>\n                                        <Card.Img className='favouriteMoviesInUsers' onClick={() => { handleClick(movie.imdbId) }} variant=\"top\" src={movie.link} />\n                                    </Link>\n                                })}\n                            </Card.Text>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem><h7>Email: </h7><h5>{userLoggedInEmail}</h5></ListGroupItem>\n                        </ListGroup>\n                    </Card>\n                </div>}\n\n        </div>\n    )\n}\n\n\nexport default Users"]},"metadata":{},"sourceType":"module"}